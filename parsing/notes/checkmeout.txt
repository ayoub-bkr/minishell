

let's assume the syntax errors are not there and the expand is working
	just fine!

what comes after that? 

=> making the command!

this is how it works in ayoub's code:

1, he has a variable names cmds (as in commands)
	it's a double pointer to char
	(he uses split to get every command on a pointer using PIPE as a delimiter)
2, 


_____________

my parsing function will get to work after checking both:
	grammar 
	syntax 
	expand and remove double/single quotes

if not syntax error is found!

if loop through the tokens linked list

i first initialize a command (cmd)
	if i find a redirection , i add it back to that red
	else word
	i add it to agrs

after i hit a pipe
	i create a new command and keep doing the same thing until i finish



_____________

in the parsing function! 

what happens when you call the function within itself? 
	using the recursion!

do you call it with the node that has pipe, 
because if so! 

it will always return to that pipe and exit and that alone is going to 
create maybe an infinity look
